// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// O model User
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id    String @id @default(uuid())
  name  String @unique // Ex: 'CLIENT', 'BARISTA', 'MANAGER'
  users User[]
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String?
  price       Float
  stock       Int         @default(0)
  isAvailable Boolean     @default(true) // Indica se o produto está disponível para venda
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id         String      @id @default(uuid())
  status     String      @default("PENDING") // Ex: 'PENDING', 'PREPARING', 'READY', 'COMPLETED'
  totalPrice Float       @default(0)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  orderItems OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  quantity  Int
  price     Float // Preço no momento da compra (para evitar inconsistências se o preço mudar)
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}
